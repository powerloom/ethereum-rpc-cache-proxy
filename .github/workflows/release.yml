name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build and push'
        required: false
        default: 'latest'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  wait-for-ci:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
    - name: Wait for CI to complete
      uses: actions/github-script@v7
      with:
        script: |
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          const tag = context.payload.release.tag_name;
          
          console.log(`Waiting for CI to complete for tag: ${tag}`);
          
          // Wait up to 10 minutes for CI to complete
          const maxAttempts = 40;
          const delay = 15000; // 15 seconds
          
          for (let attempt = 1; attempt <= maxAttempts; attempt++) {
            const { data: runs } = await github.rest.actions.listWorkflowRunsForRepo({
              owner,
              repo,
              event: 'push',
              head_sha: context.payload.release.target_commitish,
              per_page: 10
            });
            
            const ciRun = runs.workflow_runs.find(run => 
              run.name === 'CI' && run.head_branch === tag
            );
            
            if (ciRun) {
              console.log(`CI run found: ${ciRun.status} - ${ciRun.conclusion || 'in progress'}`);
              
              if (ciRun.status === 'completed') {
                if (ciRun.conclusion === 'success') {
                  console.log('CI completed successfully!');
                  return;
                } else {
                  throw new Error(`CI failed with conclusion: ${ciRun.conclusion}`);
                }
              }
            }
            
            if (attempt < maxAttempts) {
              console.log(`Attempt ${attempt}/${maxAttempts}: CI not complete yet, waiting ${delay/1000}s...`);
              await new Promise(resolve => setTimeout(resolve, delay));
            }
          }
          
          throw new Error('Timeout waiting for CI to complete');

  build-and-push:
    runs-on: ubuntu-latest
    needs: [wait-for-ci]
    if: always() && (needs.wait-for-ci.result == 'success' || github.event_name == 'workflow_dispatch')
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{raw}}
          type=raw,value=latest,enable=${{ github.event_name == 'release' }}
          type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event_name == 'workflow_dispatch' }}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: |
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:master
          type=gha
        cache-to: |
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
          type=gha,mode=max
        build-args: |
          VERSION=${{ github.event.release.tag_name || github.event.inputs.tag || 'dev' }}